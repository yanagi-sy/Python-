# 📮 郵便番号データ分析

## ✅ 概要

この学習記録では、郵便番号のCSVデータを読み込んで、特定の地域に関するフィルタリングや件数の集計を行う処理を、`pandas` を使って実装しました。
CSV形式のデータを活用した**データ分析の基本的なテクニック**を学ぶことができます。

---

## 🔧 使用ライブラリ

```python
import pandas as pd
```

* `pandas`: 表データ（CSVなど）の読み書きや、条件抽出、統計集計ができるデータ分析ライブラリ。

---

## 📥 郵便番号CSVファイルの読み込み

```python
df = pd.read_csv("KEN_ALL.CSV", encoding="shift_jis", header=None)
```

📝 **ポイント**

* `KEN_ALL.CSV`：郵便番号データ（日本郵便から提供されるCSV形式の全国郵便番号ファイル）
* `encoding="shift_jis"`：日本語の文字コードに対応。
* `header=None`：ヘッダー行がないファイルのため、列名なしで読み込む。

---

## 🔍 東京都のデータを抽出

```python
tokyo = df[df[6] == "東京都"]
```

* 列インデックス6が「東京都」のデータだけを抽出。
* `df[...]` の形式で、条件に一致する行をフィルタリング可能。

---

## 🧮 東京都にある郵便番号の件数を出力

```python
print("東京都の郵便番号の件数＝", len(tokyo))
```

* `len(tokyo)`：行数（つまり郵便番号の件数）を数える。

---

## 📄 東京都の郵便番号データをCSVファイルに保存

```python
tokyo.to_csv("tokyo.csv", encoding="utf_8_sig")
```

* `"utf_8_sig"` エンコーディングを指定すると、**Excel で文字化けしないUTF-8形式**で保存可能。

---

## 📚 補足：主な列の構造（KEN\_ALL.CSV）

| 列インデックス | 内容    |
| ------- | ----- |
| 2       | 郵便番号  |
| 6       | 都道府県名 |
| 7       | 市区町村名 |
| 8       | 町域名   |

（例：`df[6] == "東京都"` で都道府県を特定）

---

## ✅ まとめ

| 処理      | pandas 関数 / 方法         |
| ------- | ---------------------- |
| CSV読み込み | `pd.read_csv()`        |
| 文字コード対応 | `encoding="shift_jis"` |
| 条件抽出    | `df[列] == 値`           |
| 件数取得    | `len()`                |
| CSV出力   | `to_csv()`             |

